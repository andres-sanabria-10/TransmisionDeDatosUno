{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\SignalDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalDisplay = ({\n  data,\n  xRange = [0, 0.2],\n  yRange = [-8, 8],\n  id\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const chartIdRef = useRef(id || `scichart-${Math.random().toString(36).substring(7)}`);\n  useEffect(() => {\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        // Acceder a SciChart desde el objeto global window\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n\n        // Inicializar SciChart\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(chartIdRef.current);\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\"; // Fondo oscuro\n\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Amplitud\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const dataSeries = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          dataSeries,\n          stroke: \"#4CAF50\",\n          // Verde más vibrante\n          strokeThickness: 2.5 // Aumentar grosor de la línea\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        // Guardar referencias\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n\n    // Esperar a que SciChart esté disponible en window\n    if (window.SciChart) {\n      initSciChart();\n    } else {\n      const checkSciChart = setInterval(() => {\n        if (window.SciChart) {\n          clearInterval(checkSciChart);\n          initSciChart();\n        }\n      }, 100);\n    }\n    return () => {\n      isComponentMounted = false;\n      // Limpiar al desmontar\n      if (chartRef.current) {\n        chartRef.current.delete();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Actualizar datos cuando cambie la señal\n    if (dataSeriesRef.current && data.t && data.señal && data.t.length > 0) {\n      dataSeriesRef.current.clear();\n\n      // Encontrar el índice correspondiente al rango X\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n  console.log(\"Chart ID:\", chartIdRef.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: chartIdRef.current,\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '250px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(SignalDisplay, \"xCiLCjo8javpGIPanJFZYvLaA+8=\");\n_c = SignalDisplay;\nexport default SignalDisplay;\nvar _c;\n$RefreshReg$(_c, \"SignalDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SignalDisplay","data","xRange","yRange","id","_s","containerRef","chartRef","dataSeriesRef","chartIdRef","Math","random","toString","substring","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","window","SciChart","sciChartSurface","wasmContext","create","current","delete","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","yAxis","xAxes","add","yAxes","dataSeries","lineSeries","stroke","renderableSeries","error","console","checkSciChart","setInterval","clearInterval","t","señal","length","clear","maxIndex","findIndex","endIndex","tSlice","slice","señalSlice","appendRange","log","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/SignalDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst SignalDisplay = ({ data, xRange = [0, 0.2], yRange = [-8, 8], id }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const chartIdRef = useRef(id || `scichart-${Math.random().toString(36).substring(7)}`);\n\n  useEffect(() => {\n    let isComponentMounted = true;\n    \n    const initSciChart = async () => {\n      try {\n        // Acceder a SciChart desde el objeto global window\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        \n        // Inicializar SciChart\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(chartIdRef.current);\n        \n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        \n        sciChartSurface.background = \"#121212\"; // Fondo oscuro\n        \n        const xAxis = new NumericAxis(wasmContext, { \n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n        \n        const yAxis = new NumericAxis(wasmContext, { \n          axisTitle: \"Amplitud\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n        \n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        \n        const dataSeries = new XyDataSeries(wasmContext);\n        \n        const lineSeries = new FastLineRenderableSeries(wasmContext, { \n          dataSeries, \n          stroke: \"#4CAF50\",  // Verde más vibrante\n          strokeThickness: 2.5 // Aumentar grosor de la línea\n        });\n        \n        sciChartSurface.renderableSeries.add(lineSeries);\n        \n        // Guardar referencias\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n    \n    // Esperar a que SciChart esté disponible en window\n    if (window.SciChart) {\n      initSciChart();\n    } else {\n      const checkSciChart = setInterval(() => {\n        if (window.SciChart) {\n          clearInterval(checkSciChart);\n          initSciChart();\n        }\n      }, 100);\n    }\n    \n    return () => {\n      isComponentMounted = false;\n      // Limpiar al desmontar\n      if (chartRef.current) {\n        chartRef.current.delete();\n      }\n    };\n  }, []);\n  \n  useEffect(() => {\n    // Actualizar datos cuando cambie la señal\n    if (dataSeriesRef.current && data.t && data.señal && data.t.length > 0) {\n      dataSeriesRef.current.clear();\n      \n      // Encontrar el índice correspondiente al rango X\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n      \n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n      \n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n  console.log(\"Chart ID:\", chartIdRef.current);\n\n  \n  return (\n    <div id={chartIdRef.current} ref={containerRef} style={{ width: '100%', height: '250px', backgroundColor: '#121212' }}></div>\n    \n  );\n  \n};\n\nexport default SignalDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}