{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\OsciloscopioPortadora.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OsciloscopioPortadora = ({\n  params\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"osciloscopio-portadora\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n\n        // Configurar ejes con divisiones más pequeñas\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          minorGridLineStyle: {\n            color: \"#222\",\n            strokeThickness: 0.5\n          },\n          // Líneas de cuadrícula menores\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(0, 0.11),\n          // Ajustar las divisiones principales y secundarias\n          majorDelta: 0.1,\n          // Divisiones principales cada 0.1 segundos\n          minorDelta: 0.02,\n          // Divisiones secundarias cada 0.02 segundos\n          drawMajorBands: false,\n          drawMinorGridLines: true,\n          // Mostrar líneas de cuadrícula menores\n          drawMajorGridLines: true\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          minorGridLineStyle: {\n            color: \"#222\",\n            strokeThickness: 0.5\n          },\n          // Líneas de cuadrícula menores\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorDelta: 1,\n          // Divisiones principales cada 1 voltio\n          minorDelta: 0.2,\n          // Divisiones secundarias cada 0.2 voltios\n          drawMinorGridLines: true // Mostrar líneas de cuadrícula menores\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 2\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        // Añadir modificadores para zoom y pan\n        const zoomPanModifier = new window.SciChart.ZoomPanModifier();\n        const mouseWheelZoomModifier = new window.SciChart.MouseWheelZoomModifier();\n        sciChartSurface.chartModifiers.add(zoomPanModifier);\n        sciChartSurface.chartModifiers.add(mouseWheelZoomModifier);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        yAxisRef.current = yAxis;\n        console.log(\"SciChart Portadora inicializado correctamente\");\n        if ((params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n          generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n  useEffect(() => {\n    if (dataSeriesRef.current && (params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n      generateStaticData();\n    }\n  }, [params === null || params === void 0 ? void 0 : params.voltaje, params === null || params === void 0 ? void 0 : params.frecuencia, params === null || params === void 0 ? void 0 : params.fase]);\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n    dataSeriesRef.current.clear();\n\n    // Ajustar divisiones automáticamente según la frecuencia\n    if (xAxisRef.current && params.frecuencia) {\n      // Para frecuencias más altas, usamos divisiones más pequeñas\n      const cycleTime = 1 / params.frecuencia;\n\n      // Ajustar las divisiones principales para mostrar aproximadamente 10 ciclos\n      const majorDelta = cycleTime * 2;\n      // Divisiones secundarias para mostrar aproximadamente 5 por ciclo\n      const minorDelta = cycleTime / 5;\n\n      // Limitar las divisiones a valores razonables\n      xAxisRef.current.majorDelta = Math.max(0.01, Math.min(0.1, majorDelta));\n      xAxisRef.current.minorDelta = Math.max(0.002, Math.min(0.02, minorDelta));\n    }\n\n    // Generar datos para mostrar exactamente 1 segundo\n    const duration = 1;\n\n    // Ajustar puntos según la frecuencia\n    const pointsPerCycle = 50; // Usar más puntos por ciclo para mejor definición\n    const numPoints = Math.max(1000, Math.round(params.frecuencia * pointsPerCycle));\n    for (let i = 0; i < numPoints; i++) {\n      const time = i / numPoints * duration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n      dataSeriesRef.current.append(time, y);\n    }\n\n    // Ajustar el eje Y para adaptarse a la amplitud de la señal\n    if (yAxisRef.current) {\n      const yRange = Math.max(6, Math.abs(params.voltaje) * 1.2);\n      yAxisRef.current.visibleRange = new window.SciChart.NumberRange(-yRange, yRange);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"osciloscopio-portadora\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '350px',\n      backgroundColor: '#121212'\n    },\n    children: !isReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#e0e0e0',\n        textAlign: 'center',\n        paddingTop: '150px'\n      },\n      children: \"Cargando osciloscopio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(OsciloscopioPortadora, \"EP3c4CePfsunEwMh6Z5qIPX8GpM=\");\n_c = OsciloscopioPortadora;\nexport default OsciloscopioPortadora;\nvar _c;\n$RefreshReg$(_c, \"OsciloscopioPortadora\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OsciloscopioPortadora","params","_s","containerRef","chartRef","dataSeriesRef","xAxisRef","yAxisRef","intervalRef","isReady","setIsReady","timeOffsetRef","checkReadiness","document","getElementById","window","SciChart","setTimeout","current","delete","clearInterval","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","minorGridLineStyle","tickLabelStyle","visibleRange","majorDelta","minorDelta","drawMajorBands","drawMinorGridLines","drawMajorGridLines","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","renderableSeries","zoomPanModifier","ZoomPanModifier","mouseWheelZoomModifier","MouseWheelZoomModifier","chartModifiers","console","log","voltaje","undefined","frecuencia","fase","generateStaticData","error","clear","cycleTime","Math","max","min","duration","pointsPerCycle","numPoints","round","i","time","angularFreq","PI","y","sin","append","yRange","abs","id","ref","style","width","height","backgroundColor","children","textAlign","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioPortadora.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst OsciloscopioPortadora = ({ params }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"osciloscopio-portadora\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        // Configurar ejes con divisiones más pequeñas\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          minorGridLineStyle: { color: \"#222\", strokeThickness: 0.5 }, // Líneas de cuadrícula menores\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(0, 0.11),\n          // Ajustar las divisiones principales y secundarias\n          majorDelta: 0.1,     // Divisiones principales cada 0.1 segundos\n          minorDelta: 0.02,    // Divisiones secundarias cada 0.02 segundos\n          drawMajorBands: false,\n          drawMinorGridLines: true,  // Mostrar líneas de cuadrícula menores\n          drawMajorGridLines: true\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          minorGridLineStyle: { color: \"#222\", strokeThickness: 0.5 }, // Líneas de cuadrícula menores\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          majorDelta: 1,       // Divisiones principales cada 1 voltio\n          minorDelta: 0.2,     // Divisiones secundarias cada 0.2 voltios\n          drawMinorGridLines: true  // Mostrar líneas de cuadrícula menores\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const signalData = new XyDataSeries(wasmContext);\n\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 2\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        // Añadir modificadores para zoom y pan\n        const zoomPanModifier = new window.SciChart.ZoomPanModifier();\n        const mouseWheelZoomModifier = new window.SciChart.MouseWheelZoomModifier();\n        sciChartSurface.chartModifiers.add(zoomPanModifier);\n        sciChartSurface.chartModifiers.add(mouseWheelZoomModifier);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        yAxisRef.current = yAxis;\n\n        console.log(\"SciChart Portadora inicializado correctamente\");\n\n        if (params?.voltaje !== undefined &&\n          params?.frecuencia !== undefined &&\n          params?.fase !== undefined) {\n            generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n\n    initSciChart();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  useEffect(() => {\n    if (dataSeriesRef.current && params?.voltaje !== undefined &&\n      params?.frecuencia !== undefined && params?.fase !== undefined) {\n        generateStaticData();\n    }\n  }, [params?.voltaje, params?.frecuencia, params?.fase]);\n\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n\n    dataSeriesRef.current.clear();\n\n    // Ajustar divisiones automáticamente según la frecuencia\n    if (xAxisRef.current && params.frecuencia) {\n      // Para frecuencias más altas, usamos divisiones más pequeñas\n      const cycleTime = 1 / params.frecuencia;\n      \n      // Ajustar las divisiones principales para mostrar aproximadamente 10 ciclos\n      const majorDelta = cycleTime * 2;\n      // Divisiones secundarias para mostrar aproximadamente 5 por ciclo\n      const minorDelta = cycleTime / 5;\n      \n      // Limitar las divisiones a valores razonables\n      xAxisRef.current.majorDelta = Math.max(0.01, Math.min(0.1, majorDelta));\n      xAxisRef.current.minorDelta = Math.max(0.002, Math.min(0.02, minorDelta));\n    }\n\n    // Generar datos para mostrar exactamente 1 segundo\n    const duration = 1;\n    \n    // Ajustar puntos según la frecuencia\n    const pointsPerCycle = 50; // Usar más puntos por ciclo para mejor definición\n    const numPoints = Math.max(1000, Math.round(params.frecuencia * pointsPerCycle));\n    \n    for (let i = 0; i < numPoints; i++) {\n      const time = (i / numPoints) * duration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n      \n      dataSeriesRef.current.append(time, y);\n    }\n    \n    // Ajustar el eje Y para adaptarse a la amplitud de la señal\n    if (yAxisRef.current) {\n      const yRange = Math.max(6, Math.abs(params.voltaje) * 1.2);\n      yAxisRef.current.visibleRange = new window.SciChart.NumberRange(-yRange, yRange);\n    }\n  };\n\n  return (\n    <div id=\"osciloscopio-portadora\" ref={containerRef} style={{ width: '100%', height: '350px', backgroundColor: '#121212' }}>\n      {!isReady && (\n        <div style={{ color: '#e0e0e0', textAlign: 'center', paddingTop: '150px' }}>\n          Cargando osciloscopio...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OsciloscopioPortadora;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}