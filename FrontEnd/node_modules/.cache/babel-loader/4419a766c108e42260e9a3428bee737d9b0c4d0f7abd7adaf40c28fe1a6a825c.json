{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\OsciloscopioModuladora.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OsciloscopioModuladora = ({\n  params\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeRef = useRef(0);\n  useEffect(() => {\n    const checkReadiness = () => {\n      const container = document.getElementById(\"osciloscopio-moduladora\");\n      if (container && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"osciloscopio-moduladora\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(0, 0.1),\n          autoRange: false\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          }\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#4CAF50\",\n          // Verde para la moduladora\n          dataSeries: signalData,\n          strokeThickness: 2.5\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        console.log(\"SciChart Moduladora inicializado correctamente\");\n        if ((params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n          startRealTimeUpdate();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Moduladora:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n  useEffect(() => {\n    if ((params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n      startRealTimeUpdate();\n    }\n  }, [params === null || params === void 0 ? void 0 : params.voltaje, params === null || params === void 0 ? void 0 : params.frecuencia, params === null || params === void 0 ? void 0 : params.fase]);\n  const startRealTimeUpdate = () => {\n    if (!dataSeriesRef.current) return;\n    dataSeriesRef.current.clear();\n    timeRef.current = 0;\n    const interval = setInterval(() => {\n      if (!dataSeriesRef.current) return;\n      const timeStep = 0.001; // Paso de tiempo (1 ms)\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * timeRef.current + params.fase);\n      dataSeriesRef.current.append(timeRef.current, y);\n\n      // Limita la cantidad de datos mostrados en el grÃ¡fico para evitar sobrecarga\n      if (dataSeriesRef.current.count() > 1000) {\n        dataSeriesRef.current.removeAt(0);\n      }\n      timeRef.current += timeStep;\n    }, 10); // Se actualiza cada 10 ms (~100 FPS)\n\n    return () => clearInterval(interval);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"osciloscopio-moduladora\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '350px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(OsciloscopioModuladora, \"94w8IsbMAuX5ZgRwahPorb4yXW4=\");\n_c = OsciloscopioModuladora;\nexport default OsciloscopioModuladora;\nvar _c;\n$RefreshReg$(_c, \"OsciloscopioModuladora\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OsciloscopioModuladora","params","_s","containerRef","chartRef","dataSeriesRef","isReady","setIsReady","timeRef","checkReadiness","container","document","getElementById","window","SciChart","setTimeout","current","delete","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","autoRange","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","renderableSeries","console","log","voltaje","undefined","frecuencia","fase","startRealTimeUpdate","error","clear","interval","setInterval","timeStep","angularFreq","Math","PI","y","sin","append","count","removeAt","clearInterval","id","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioModuladora.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst OsciloscopioModuladora = ({ params }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeRef = useRef(0);\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      const container = document.getElementById(\"osciloscopio-moduladora\");\n      if (container && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const { SciChartSurface, NumericAxis, FastLineRenderableSeries, XyDataSeries, NumberRange } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"osciloscopio-moduladora\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(0, 0.1),\n          autoRange: false\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" }\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#4CAF50\", // Verde para la moduladora\n          dataSeries: signalData,\n          strokeThickness: 2.5\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n\n        console.log(\"SciChart Moduladora inicializado correctamente\");\n\n        if (params?.voltaje !== undefined && params?.frecuencia !== undefined && params?.fase !== undefined) {\n          startRealTimeUpdate();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Moduladora:\", error);\n      }\n    };\n\n    initSciChart();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  useEffect(() => {\n    if (params?.voltaje !== undefined && params?.frecuencia !== undefined && params?.fase !== undefined) {\n      startRealTimeUpdate();\n    }\n  }, [params?.voltaje, params?.frecuencia, params?.fase]);\n\n  const startRealTimeUpdate = () => {\n    if (!dataSeriesRef.current) return;\n\n    dataSeriesRef.current.clear();\n    timeRef.current = 0;\n\n    const interval = setInterval(() => {\n      if (!dataSeriesRef.current) return;\n\n      const timeStep = 0.001; // Paso de tiempo (1 ms)\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * timeRef.current + params.fase);\n\n      dataSeriesRef.current.append(timeRef.current, y);\n\n      // Limita la cantidad de datos mostrados en el grÃ¡fico para evitar sobrecarga\n      if (dataSeriesRef.current.count() > 1000) {\n        dataSeriesRef.current.removeAt(0);\n      }\n\n      timeRef.current += timeStep;\n    }, 10); // Se actualiza cada 10 ms (~100 FPS)\n\n    return () => clearInterval(interval);\n  };\n\n  return (\n    <div id=\"osciloscopio-moduladora\" ref={containerRef} style={{ width: '100%', height: '350px', backgroundColor: '#121212' }}></div>\n  );\n};\n\nexport default OsciloscopioModuladora;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}