{"ast":null,"code":"const initSciChart = async () => {\n  let sciChartSurface;\n  let wasmContext;\n  try {\n    // Acceder a SciChart desde el objeto global window\n    const {\n      SciChartSurface,\n      NumericAxis,\n      FastLineRenderableSeries,\n      XyDataSeries,\n      NumberRange\n    } = window.SciChart;\n\n    // Inicializar SciChart\n    const result = await SciChartSurface.create(\"osciloscopio-moduladora\");\n    sciChartSurface = result.sciChartSurface;\n    wasmContext = result.wasmContext;\n    console.log(\"containerRef:\", containerRef.current);\n    console.log(\"window.SciChart:\", window.SciChart);\n    if (!isComponentMounted) {\n      sciChartSurface.delete();\n      return;\n    }\n    sciChartSurface.background = \"#121212\"; // Fondo oscuro\n\n    // Configurar ejes\n    const xAxis = new NumericAxis(wasmContext, {\n      axisTitle: \"Tiempo (s)\",\n      labelStyle: {\n        color: \"#e0e0e0\"\n      },\n      titleStyle: {\n        color: \"#e0e0e0\"\n      },\n      majorGridLineStyle: {\n        color: \"#333\",\n        strokeThickness: 1\n      },\n      tickLabelStyle: {\n        color: \"#e0e0e0\"\n      },\n      visibleRange: new NumberRange(0, 0.1) // Mostrar 0.1 segundos\n    });\n    const yAxis = new NumericAxis(wasmContext, {\n      axisTitle: \"Voltaje (V)\",\n      visibleRange: new NumberRange(-6, 6),\n      // Ajustado para el rango de voltaje\n      labelStyle: {\n        color: \"#e0e0e0\"\n      },\n      titleStyle: {\n        color: \"#e0e0e0\"\n      },\n      majorGridLineStyle: {\n        color: \"#333\",\n        strokeThickness: 1\n      },\n      tickLabelStyle: {\n        color: \"#e0e0e0\"\n      }\n    });\n    sciChartSurface.xAxes.add(xAxis);\n    sciChartSurface.yAxes.add(yAxis);\n\n    // Series de datos\n    const signalData = new XyDataSeries(wasmContext);\n    const lineSeries = new FastLineRenderableSeries(wasmContext, {\n      stroke: \"#2196F3\",\n      // Azul para la moduladora\n      dataSeries: signalData,\n      strokeThickness: 2.5\n    });\n    sciChartSurface.renderableSeries.add(lineSeries);\n\n    // Guardar referencias\n    chartRef.current = sciChartSurface;\n    dataSeriesRef.current = signalData;\n\n    // Marcar como inicializado\n    isInitializedRef.current = true;\n\n    // Generar datos estáticos\n    generateStaticData();\n  } catch (error) {\n    console.error(\"Error inicializando SciChart:\", error);\n  }\n};","map":{"version":3,"names":["initSciChart","sciChartSurface","wasmContext","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","window","SciChart","result","create","console","log","containerRef","current","isComponentMounted","delete","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","renderableSeries","chartRef","dataSeriesRef","isInitializedRef","generateStaticData","error"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioModuladora.js"],"sourcesContent":["const initSciChart = async () => {\n  let sciChartSurface;\n  let wasmContext;\n  \n  try {\n    // Acceder a SciChart desde el objeto global window\n    const {\n      SciChartSurface,\n      NumericAxis,\n      FastLineRenderableSeries,\n      XyDataSeries,\n      NumberRange\n    } = window.SciChart;\n\n    // Inicializar SciChart\n    const result = await SciChartSurface.create(\"osciloscopio-moduladora\");\n    sciChartSurface = result.sciChartSurface;\n    wasmContext = result.wasmContext;\n\n    console.log(\"containerRef:\", containerRef.current);\n    console.log(\"window.SciChart:\", window.SciChart);\n\n    if (!isComponentMounted) {\n      sciChartSurface.delete();\n      return;\n    }\n\n    sciChartSurface.background = \"#121212\"; // Fondo oscuro\n\n    // Configurar ejes\n    const xAxis = new NumericAxis(wasmContext, {\n      axisTitle: \"Tiempo (s)\",\n      labelStyle: { color: \"#e0e0e0\" },\n      titleStyle: { color: \"#e0e0e0\" },\n      majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n      tickLabelStyle: { color: \"#e0e0e0\" },\n      visibleRange: new NumberRange(0, 0.1) // Mostrar 0.1 segundos\n    });\n\n    const yAxis = new NumericAxis(wasmContext, {\n      axisTitle: \"Voltaje (V)\",\n      visibleRange: new NumberRange(-6, 6), // Ajustado para el rango de voltaje\n      labelStyle: { color: \"#e0e0e0\" },\n      titleStyle: { color: \"#e0e0e0\" },\n      majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n      tickLabelStyle: { color: \"#e0e0e0\" }\n    });\n\n    sciChartSurface.xAxes.add(xAxis);\n    sciChartSurface.yAxes.add(yAxis);\n\n    // Series de datos\n    const signalData = new XyDataSeries(wasmContext);\n\n    const lineSeries = new FastLineRenderableSeries(wasmContext, {\n      stroke: \"#2196F3\", // Azul para la moduladora\n      dataSeries: signalData,\n      strokeThickness: 2.5\n    });\n\n    sciChartSurface.renderableSeries.add(lineSeries);\n\n    // Guardar referencias\n    chartRef.current = sciChartSurface;\n    dataSeriesRef.current = signalData;\n\n    // Marcar como inicializado\n    isInitializedRef.current = true;\n\n    // Generar datos estáticos\n    generateStaticData();\n  } catch (error) {\n    console.error(\"Error inicializando SciChart:\", error);\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAIC,eAAe;EACnB,IAAIC,WAAW;EAEf,IAAI;IACF;IACA,MAAM;MACJC,eAAe;MACfC,WAAW;MACXC,wBAAwB;MACxBC,YAAY;MACZC;IACF,CAAC,GAAGC,MAAM,CAACC,QAAQ;;IAEnB;IACA,MAAMC,MAAM,GAAG,MAAMP,eAAe,CAACQ,MAAM,CAAC,yBAAyB,CAAC;IACtEV,eAAe,GAAGS,MAAM,CAACT,eAAe;IACxCC,WAAW,GAAGQ,MAAM,CAACR,WAAW;IAEhCU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC;IAClDH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,MAAM,CAACC,QAAQ,CAAC;IAEhD,IAAI,CAACO,kBAAkB,EAAE;MACvBf,eAAe,CAACgB,MAAM,CAAC,CAAC;MACxB;IACF;IAEAhB,eAAe,CAACiB,UAAU,GAAG,SAAS,CAAC,CAAC;;IAExC;IACA,MAAMC,KAAK,GAAG,IAAIf,WAAW,CAACF,WAAW,EAAE;MACzCkB,SAAS,EAAE,YAAY;MACvBC,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC;MAChCC,UAAU,EAAE;QAAED,KAAK,EAAE;MAAU,CAAC;MAChCE,kBAAkB,EAAE;QAAEF,KAAK,EAAE,MAAM;QAAEG,eAAe,EAAE;MAAE,CAAC;MACzDC,cAAc,EAAE;QAAEJ,KAAK,EAAE;MAAU,CAAC;MACpCK,YAAY,EAAE,IAAIpB,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMqB,KAAK,GAAG,IAAIxB,WAAW,CAACF,WAAW,EAAE;MACzCkB,SAAS,EAAE,aAAa;MACxBO,YAAY,EAAE,IAAIpB,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE;MACtCc,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAC;MAChCC,UAAU,EAAE;QAAED,KAAK,EAAE;MAAU,CAAC;MAChCE,kBAAkB,EAAE;QAAEF,KAAK,EAAE,MAAM;QAAEG,eAAe,EAAE;MAAE,CAAC;MACzDC,cAAc,EAAE;QAAEJ,KAAK,EAAE;MAAU;IACrC,CAAC,CAAC;IAEFrB,eAAe,CAAC4B,KAAK,CAACC,GAAG,CAACX,KAAK,CAAC;IAChClB,eAAe,CAAC8B,KAAK,CAACD,GAAG,CAACF,KAAK,CAAC;;IAEhC;IACA,MAAMI,UAAU,GAAG,IAAI1B,YAAY,CAACJ,WAAW,CAAC;IAEhD,MAAM+B,UAAU,GAAG,IAAI5B,wBAAwB,CAACH,WAAW,EAAE;MAC3DgC,MAAM,EAAE,SAAS;MAAE;MACnBC,UAAU,EAAEH,UAAU;MACtBP,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFxB,eAAe,CAACmC,gBAAgB,CAACN,GAAG,CAACG,UAAU,CAAC;;IAEhD;IACAI,QAAQ,CAACtB,OAAO,GAAGd,eAAe;IAClCqC,aAAa,CAACvB,OAAO,GAAGiB,UAAU;;IAElC;IACAO,gBAAgB,CAACxB,OAAO,GAAG,IAAI;;IAE/B;IACAyB,kBAAkB,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd7B,OAAO,CAAC6B,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}