{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\OsciloscopioPortadora.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OsciloscopioPortadora = ({\n  params\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n\n  // Puedes ajustar este valor para cambiar el rango de tiempo visible\n  const timeRange = (params === null || params === void 0 ? void 0 : params.timeRange) || 2; // Rango de tiempo en segundos (valor por defecto: 2 segundos)\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"osciloscopio-portadora\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n\n        // Configurar ejes\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(0, timeRange) // Usa el rango de tiempo configurable\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          }\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 2\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        yAxisRef.current = yAxis;\n        console.log(\"SciChart Portadora inicializado correctamente\");\n        if ((params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n          generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady, timeRange]);\n  useEffect(() => {\n    if (dataSeriesRef.current && (params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n      generateStaticData();\n    }\n  }, [params === null || params === void 0 ? void 0 : params.voltaje, params === null || params === void 0 ? void 0 : params.frecuencia, params === null || params === void 0 ? void 0 : params.fase, timeRange]);\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n    dataSeriesRef.current.clear();\n\n    // Usar el rango de tiempo configurable\n    const fixedDuration = timeRange;\n\n    // Calcular el número de puntos necesarios para representar adecuadamente la señal\n    const pointsPerHz = 20; // Puntos por Hz para garantizar calidad\n    const numPoints = Math.max(1000, Math.round(params.frecuencia * pointsPerHz * fixedDuration));\n\n    // Generar datos dentro del rango de tiempo configurable\n    for (let i = 0; i < numPoints; i++) {\n      const time = i / numPoints * fixedDuration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n      dataSeriesRef.current.append(time, y);\n    }\n\n    // Ajustar el eje X para mostrar siempre el intervalo de tiempo configurado\n    if (xAxisRef.current) {\n      xAxisRef.current.visibleRange = new window.SciChart.NumberRange(0, fixedDuration);\n    }\n\n    // Ajustar el eje Y para adaptarse a la amplitud de la señal\n    if (yAxisRef.current) {\n      const yRange = Math.max(6, Math.abs(params.voltaje) * 1.2);\n      yAxisRef.current.visibleRange = new window.SciChart.NumberRange(-yRange, yRange);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"osciloscopio-portadora\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '350px',\n      backgroundColor: '#121212'\n    },\n    children: !isReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#e0e0e0',\n        textAlign: 'center',\n        paddingTop: '150px'\n      },\n      children: \"Cargando osciloscopio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(OsciloscopioPortadora, \"EP3c4CePfsunEwMh6Z5qIPX8GpM=\");\n_c = OsciloscopioPortadora;\nexport default OsciloscopioPortadora;\nvar _c;\n$RefreshReg$(_c, \"OsciloscopioPortadora\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OsciloscopioPortadora","params","_s","containerRef","chartRef","dataSeriesRef","xAxisRef","yAxisRef","intervalRef","isReady","setIsReady","timeOffsetRef","timeRange","checkReadiness","document","getElementById","window","SciChart","setTimeout","current","delete","clearInterval","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","renderableSeries","console","log","voltaje","undefined","frecuencia","fase","generateStaticData","error","clear","fixedDuration","pointsPerHz","numPoints","Math","max","round","i","time","angularFreq","PI","y","sin","append","yRange","abs","id","ref","style","width","height","backgroundColor","children","textAlign","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioPortadora.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst OsciloscopioPortadora = ({ params }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n\n  // Puedes ajustar este valor para cambiar el rango de tiempo visible\n  const timeRange = params?.timeRange || 2; // Rango de tiempo en segundos (valor por defecto: 2 segundos)\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"osciloscopio-portadora\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        // Configurar ejes\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(0, timeRange) // Usa el rango de tiempo configurable\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" }\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const signalData = new XyDataSeries(wasmContext);\n\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 2\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        yAxisRef.current = yAxis;\n\n        console.log(\"SciChart Portadora inicializado correctamente\");\n\n        if (params?.voltaje !== undefined &&\n          params?.frecuencia !== undefined &&\n          params?.fase !== undefined) {\n            generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n\n    initSciChart();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady, timeRange]);\n\n  useEffect(() => {\n    if (dataSeriesRef.current && params?.voltaje !== undefined &&\n      params?.frecuencia !== undefined && params?.fase !== undefined) {\n        generateStaticData();\n    }\n  }, [params?.voltaje, params?.frecuencia, params?.fase, timeRange]);\n\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n\n    dataSeriesRef.current.clear();\n\n    // Usar el rango de tiempo configurable\n    const fixedDuration = timeRange;\n    \n    // Calcular el número de puntos necesarios para representar adecuadamente la señal\n    const pointsPerHz = 20; // Puntos por Hz para garantizar calidad\n    const numPoints = Math.max(1000, Math.round(params.frecuencia * pointsPerHz * fixedDuration));\n    \n    // Generar datos dentro del rango de tiempo configurable\n    for (let i = 0; i < numPoints; i++) {\n      const time = (i / numPoints) * fixedDuration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n      \n      dataSeriesRef.current.append(time, y);\n    }\n    \n    // Ajustar el eje X para mostrar siempre el intervalo de tiempo configurado\n    if (xAxisRef.current) {\n      xAxisRef.current.visibleRange = new window.SciChart.NumberRange(0, fixedDuration);\n    }\n    \n    // Ajustar el eje Y para adaptarse a la amplitud de la señal\n    if (yAxisRef.current) {\n      const yRange = Math.max(6, Math.abs(params.voltaje) * 1.2);\n      yAxisRef.current.visibleRange = new window.SciChart.NumberRange(-yRange, yRange);\n    }\n  };\n\n  return (\n    <div id=\"osciloscopio-portadora\" ref={containerRef} style={{ width: '100%', height: '350px', backgroundColor: '#121212' }}>\n      {!isReady && (\n        <div style={{ color: '#e0e0e0', textAlign: 'center', paddingTop: '150px' }}>\n          Cargando osciloscopio...\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OsciloscopioPortadora;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}