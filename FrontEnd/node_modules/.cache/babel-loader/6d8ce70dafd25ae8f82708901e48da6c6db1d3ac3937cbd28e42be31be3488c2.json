{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\SignalDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalDisplay = ({\n  data,\n  xRange = [0, 0.2],\n  yRange = [-8, 8],\n  id\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const chartIdRef = useRef(id || \"mi-grafico\");\n  useEffect(() => {\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        if (!window.SciChart) {\n          console.error(\"SciChart no está disponible en window.\");\n          return;\n        }\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Amplitud\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const dataSeries = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          dataSeries,\n          stroke: \"#4CAF50\",\n          strokeThickness: 2.5\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        // Guardar referencias\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n\n    // Verificar que SciChart está cargado\n    if (window.SciChart) {\n      initSciChart();\n    } else {\n      const checkSciChart = setInterval(() => {\n        if (window.SciChart) {\n          clearInterval(checkSciChart);\n          initSciChart();\n        }\n      }, 100);\n\n      // Evitar loops infinitos\n      setTimeout(() => clearInterval(checkSciChart), 5000);\n    }\n    return () => {\n      isComponentMounted = false;\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    var _data$t, _data$señal;\n    if (dataSeriesRef.current && (data === null || data === void 0 ? void 0 : (_data$t = data.t) === null || _data$t === void 0 ? void 0 : _data$t.length) > 0 && (data === null || data === void 0 ? void 0 : (_data$señal = data.señal) === null || _data$señal === void 0 ? void 0 : _data$señal.length) > 0) {\n      dataSeriesRef.current.clear();\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n  console.log(\"Chart ID:\", chartIdRef.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"mi-grafico\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '250px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s(SignalDisplay, \"xCiLCjo8javpGIPanJFZYvLaA+8=\");\n_c = SignalDisplay;\nexport default SignalDisplay;\nvar _c;\n$RefreshReg$(_c, \"SignalDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SignalDisplay","data","xRange","yRange","id","_s","containerRef","chartRef","dataSeriesRef","chartIdRef","isComponentMounted","initSciChart","window","SciChart","console","error","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","delete","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","yAxis","xAxes","add","yAxes","dataSeries","lineSeries","stroke","renderableSeries","current","checkSciChart","setInterval","clearInterval","setTimeout","_data$t","_data$señal","t","length","señal","clear","maxIndex","findIndex","endIndex","tSlice","slice","señalSlice","appendRange","log","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/SignalDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst SignalDisplay = ({ data, xRange = [0, 0.2], yRange = [-8, 8], id }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const chartIdRef = useRef(id || \"mi-grafico\");\n\n  useEffect(() => {\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        if (!window.SciChart) {\n          console.error(\"SciChart no está disponible en window.\");\n          return;\n        }\n\n        const { SciChartSurface, NumericAxis, FastLineRenderableSeries, XyDataSeries, NumberRange } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\"; \n\n        const xAxis = new NumericAxis(wasmContext, { \n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n\n        const yAxis = new NumericAxis(wasmContext, { \n          axisTitle: \"Amplitud\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const dataSeries = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, { \n          dataSeries, \n          stroke: \"#4CAF50\",  \n          strokeThickness: 2.5\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        // Guardar referencias\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n\n    // Verificar que SciChart está cargado\n    if (window.SciChart) {\n      initSciChart();\n    } else {\n      const checkSciChart = setInterval(() => {\n        if (window.SciChart) {\n          clearInterval(checkSciChart);\n          initSciChart();\n        }\n      }, 100);\n      \n      // Evitar loops infinitos\n      setTimeout(() => clearInterval(checkSciChart), 5000);\n    }\n\n    return () => {\n      isComponentMounted = false;\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (dataSeriesRef.current && data?.t?.length > 0 && data?.señal?.length > 0) {\n      dataSeriesRef.current.clear();\n\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n\n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n\n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n\n  console.log(\"Chart ID:\", chartIdRef.current);\n\n  return <div id={\"mi-grafico\"} ref={containerRef} style={{ width: '100%', height: '250px', backgroundColor: '#121212' }}></div>;\n};\n\nexport default SignalDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;EAAEC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAAEC;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMU,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,aAAa,GAAGX,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMY,UAAU,GAAGZ,MAAM,CAACO,EAAE,IAAI,YAAY,CAAC;EAE7CR,SAAS,CAAC,MAAM;IACd,IAAIc,kBAAkB,GAAG,IAAI;IAE7B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;UACpBC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;UACvD;QACF;QAEA,MAAM;UAAEC,eAAe;UAAEC,WAAW;UAAEC,wBAAwB;UAAEC,YAAY;UAAEC;QAAY,CAAC,GAAGR,MAAM,CAACC,QAAQ;QAE7G,MAAM;UAAEQ,eAAe;UAAEC;QAAY,CAAC,GAAG,MAAMN,eAAe,CAACO,MAAM,CAAC,EAAE,CAAC;QAEzE,IAAI,CAACb,kBAAkB,EAAE;UACvBW,eAAe,CAACG,MAAM,CAAC,CAAC;UACxB;QACF;QAEAH,eAAe,CAACI,UAAU,GAAG,SAAS;QAEtC,MAAMC,KAAK,GAAG,IAAIT,WAAW,CAACK,WAAW,EAAE;UACzCK,SAAS,EAAE,YAAY;UACvBC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAC;UAChCC,UAAU,EAAE;YAAED,KAAK,EAAE;UAAU,CAAC;UAChCE,kBAAkB,EAAE;YAAEF,KAAK,EAAE,MAAM;YAAEG,eAAe,EAAE;UAAE,CAAC;UACzDC,cAAc,EAAE;YAAEJ,KAAK,EAAE;UAAU,CAAC;UACpCK,YAAY,EAAE,IAAId,WAAW,CAAClB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC;QAEF,MAAMiC,KAAK,GAAG,IAAIlB,WAAW,CAACK,WAAW,EAAE;UACzCK,SAAS,EAAE,UAAU;UACrBC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAC;UAChCC,UAAU,EAAE;YAAED,KAAK,EAAE;UAAU,CAAC;UAChCE,kBAAkB,EAAE;YAAEF,KAAK,EAAE,MAAM;YAAEG,eAAe,EAAE;UAAE,CAAC;UACzDC,cAAc,EAAE;YAAEJ,KAAK,EAAE;UAAU,CAAC;UACpCK,YAAY,EAAE,IAAId,WAAW,CAACjB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC;QAEFkB,eAAe,CAACe,KAAK,CAACC,GAAG,CAACX,KAAK,CAAC;QAChCL,eAAe,CAACiB,KAAK,CAACD,GAAG,CAACF,KAAK,CAAC;QAEhC,MAAMI,UAAU,GAAG,IAAIpB,YAAY,CAACG,WAAW,CAAC;QAChD,MAAMkB,UAAU,GAAG,IAAItB,wBAAwB,CAACI,WAAW,EAAE;UAC3DiB,UAAU;UACVE,MAAM,EAAE,SAAS;UACjBT,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFX,eAAe,CAACqB,gBAAgB,CAACL,GAAG,CAACG,UAAU,CAAC;;QAEhD;QACAjC,QAAQ,CAACoC,OAAO,GAAGtB,eAAe;QAClCb,aAAa,CAACmC,OAAO,GAAGJ,UAAU;MACpC,CAAC,CAAC,OAAOxB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;;IAED;IACA,IAAIH,MAAM,CAACC,QAAQ,EAAE;MACnBF,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACL,MAAMiC,aAAa,GAAGC,WAAW,CAAC,MAAM;QACtC,IAAIjC,MAAM,CAACC,QAAQ,EAAE;UACnBiC,aAAa,CAACF,aAAa,CAAC;UAC5BjC,YAAY,CAAC,CAAC;QAChB;MACF,CAAC,EAAE,GAAG,CAAC;;MAEP;MACAoC,UAAU,CAAC,MAAMD,aAAa,CAACF,aAAa,CAAC,EAAE,IAAI,CAAC;IACtD;IAEA,OAAO,MAAM;MACXlC,kBAAkB,GAAG,KAAK;MAC1B,IAAIH,QAAQ,CAACoC,OAAO,EAAE;QACpBpC,QAAQ,CAACoC,OAAO,CAACnB,MAAM,CAAC,CAAC;QACzBjB,QAAQ,CAACoC,OAAO,GAAG,IAAI;MACzB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN/C,SAAS,CAAC,MAAM;IAAA,IAAAoD,OAAA,EAAAC,WAAA;IACd,IAAIzC,aAAa,CAACmC,OAAO,IAAI,CAAA1C,IAAI,aAAJA,IAAI,wBAAA+C,OAAA,GAAJ/C,IAAI,CAAEiD,CAAC,cAAAF,OAAA,uBAAPA,OAAA,CAASG,MAAM,IAAG,CAAC,IAAI,CAAAlD,IAAI,aAAJA,IAAI,wBAAAgD,WAAA,GAAJhD,IAAI,CAAEmD,KAAK,cAAAH,WAAA,uBAAXA,WAAA,CAAaE,MAAM,IAAG,CAAC,EAAE;MAC3E3C,aAAa,CAACmC,OAAO,CAACU,KAAK,CAAC,CAAC;MAE7B,MAAMC,QAAQ,GAAGrD,IAAI,CAACiD,CAAC,CAACK,SAAS,CAACL,CAAC,IAAIA,CAAC,IAAIhD,MAAM,CAAC,CAAC,CAAC,CAAC;MACtD,MAAMsD,QAAQ,GAAGF,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAGrD,IAAI,CAACiD,CAAC,CAACC,MAAM;MAExD,MAAMM,MAAM,GAAGxD,IAAI,CAACiD,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAEF,QAAQ,CAAC;MACxC,MAAMG,UAAU,GAAG1D,IAAI,CAACmD,KAAK,CAACM,KAAK,CAAC,CAAC,EAAEF,QAAQ,CAAC;MAEhDhD,aAAa,CAACmC,OAAO,CAACiB,WAAW,CAACH,MAAM,EAAEE,UAAU,CAAC;IACvD;EACF,CAAC,EAAE,CAAC1D,IAAI,EAAEC,MAAM,CAAC,CAAC;EAElBY,OAAO,CAAC+C,GAAG,CAAC,WAAW,EAAEpD,UAAU,CAACkC,OAAO,CAAC;EAE5C,oBAAO5C,OAAA;IAAKK,EAAE,EAAE,YAAa;IAAC0D,GAAG,EAAExD,YAAa;IAACyD,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,eAAe,EAAE;IAAU;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChI,CAAC;AAACjE,EAAA,CA1GIL,aAAa;AAAAuE,EAAA,GAAbvE,aAAa;AA4GnB,eAAeA,aAAa;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}