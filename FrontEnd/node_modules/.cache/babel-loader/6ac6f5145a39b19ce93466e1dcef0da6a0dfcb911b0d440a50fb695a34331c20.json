{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\respaldo\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\SignalDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalDisplay = ({\n  data,\n  xRange = [0, 0.2],\n  yRange = [-8, 8],\n  id = \"mi-grafico\"\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n\n  // Primer efecto: Verificar si el contenedor y SciChart están disponibles\n  useEffect(() => {\n    const checkReadiness = () => {\n      const container = document.getElementById(id);\n      if (container && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n\n  // Segundo efecto: Inicializar SciChart solo cuando todo esté listo\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(id);\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Amplitud\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const dataSeries = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          dataSeries,\n          stroke: \"#4CAF50\",\n          strokeThickness: 2.5\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n        console.log(\"SciChart inicializado correctamente en:\", id);\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  // Tercer efecto: Actualizar los datos cuando cambian\n  useEffect(() => {\n    var _data$t, _data$señal;\n    if (dataSeriesRef.current && (data === null || data === void 0 ? void 0 : (_data$t = data.t) === null || _data$t === void 0 ? void 0 : _data$t.length) > 0 && (data === null || data === void 0 ? void 0 : (_data$señal = data.señal) === null || _data$señal === void 0 ? void 0 : _data$señal.length) > 0) {\n      dataSeriesRef.current.clear();\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '250px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n_s(SignalDisplay, \"ZVB50C/UUvb0xh7OmDQrz497SDE=\");\n_c = SignalDisplay;\nexport default SignalDisplay;\nvar _c;\n$RefreshReg$(_c, \"SignalDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SignalDisplay","data","xRange","yRange","id","_s","containerRef","chartRef","dataSeriesRef","isReady","setIsReady","checkReadiness","container","document","getElementById","window","SciChart","setTimeout","current","delete","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","visibleRange","yAxis","xAxes","add","yAxes","dataSeries","lineSeries","stroke","renderableSeries","console","log","error","_data$t","_data$señal","t","length","señal","clear","maxIndex","findIndex","endIndex","tSlice","slice","señalSlice","appendRange","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/respaldo/TransmisionDeDatos/FrontEnd/src/components/SignalDisplay.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst SignalDisplay = ({ data, xRange = [0, 0.2], yRange = [-8, 8], id = \"mi-grafico\" }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n\n  // Primer efecto: Verificar si el contenedor y SciChart están disponibles\n  useEffect(() => {\n    const checkReadiness = () => {\n      const container = document.getElementById(id);\n      if (container && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n\n  // Segundo efecto: Inicializar SciChart solo cuando todo esté listo\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const { SciChartSurface, NumericAxis, FastLineRenderableSeries, XyDataSeries, NumberRange } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(id);\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(xRange[0], xRange[1])\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Amplitud\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(yRange[0], yRange[1])\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const dataSeries = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          dataSeries,\n          stroke: \"#4CAF50\",\n          strokeThickness: 2.5\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = dataSeries;\n\n        console.log(\"SciChart inicializado correctamente en:\", id);\n      } catch (error) {\n        console.error(\"Error inicializando SciChart:\", error);\n      }\n    };\n\n    initSciChart();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  // Tercer efecto: Actualizar los datos cuando cambian\n  useEffect(() => {\n    if (dataSeriesRef.current && data?.t?.length > 0 && data?.señal?.length > 0) {\n      dataSeriesRef.current.clear();\n\n      const maxIndex = data.t.findIndex(t => t >= xRange[1]);\n      const endIndex = maxIndex > 0 ? maxIndex : data.t.length;\n\n      const tSlice = data.t.slice(0, endIndex);\n      const señalSlice = data.señal.slice(0, endIndex);\n\n      dataSeriesRef.current.appendRange(tSlice, señalSlice);\n    }\n  }, [data, xRange]);\n\n  return <div id={id} ref={containerRef} style={{ width: '100%', height: '250px', backgroundColor: '#121212' }}></div>;\n};\n\nexport default SignalDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}