{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\OsciloscopioModuladora.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OsciloscopioModuladora = ({\n  params\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n  const defaultParams = {\n    voltaje: 3,\n    frecuencia: 30,\n    fase: 0\n  };\n  const actualParams = {\n    voltaje: (params === null || params === void 0 ? void 0 : params.voltaje) !== undefined ? params.voltaje : defaultParams.voltaje,\n    frecuencia: (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined ? params.frecuencia : defaultParams.frecuencia,\n    fase: (params === null || params === void 0 ? void 0 : params.fase) !== undefined ? params.fase : defaultParams.fase\n  };\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-moduladora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"osciloscopio-moduladora\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(0, 0.1),\n          autoRange: false\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          autoRange: false\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#2196F3\",\n          dataSeries: signalData,\n          strokeThickness: 1.5\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        console.log(\"SciChart Moduladora inicializado correctamente\");\n        startRealTimeAnimation();\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Moduladora:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n  useEffect(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    if (isReady && dataSeriesRef.current) {\n      startRealTimeAnimation();\n    }\n  }, [actualParams.voltaje, actualParams.frecuencia, actualParams.fase, isReady]);\n  const startRealTimeAnimation = () => {\n    if (!dataSeriesRef.current || !xAxisRef.current) return;\n    dataSeriesRef.current.clear();\n    timeOffsetRef.current = 0;\n    generateStaticData();\n    intervalRef.current = setInterval(() => {\n      timeOffsetRef.current += 0.001;\n      const currentTime = timeOffsetRef.current;\n      xAxisRef.current.visibleRange = new window.SciChart.NumberRange(currentTime, currentTime + 0.1);\n      generateWaveformData(currentTime, currentTime + 0.1);\n    }, 50);\n  };\n  const generateWaveformData = (startTime, endTime) => {\n    if (!dataSeriesRef.current) return;\n    dataSeriesRef.current.clear();\n    const minPointsPerCycle = 20;\n    const cyclesInWindow = actualParams.frecuencia * (endTime - startTime);\n    const totalPoints = Math.max(1000, Math.ceil(minPointsPerCycle * cyclesInWindow));\n    const timeStep = (endTime - startTime) / totalPoints;\n    for (let i = 0; i <= totalPoints; i++) {\n      const time = startTime + i * timeStep;\n      const angularFreq = 2 * Math.PI * actualParams.frecuencia;\n      const y = actualParams.voltaje * Math.sin(angularFreq * time + actualParams.fase);\n      dataSeriesRef.current.append(time, y);\n    }\n  };\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n    const currentTime = timeOffsetRef.current;\n    generateWaveformData(currentTime, currentTime + 0.1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"osciloscopio-moduladora\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '350px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(OsciloscopioModuladora, \"JRswMxUksQRdr0H+0dlOf60nrpY=\");\n_c = OsciloscopioModuladora;\nexport default OsciloscopioModuladora;\nvar _c;\n$RefreshReg$(_c, \"OsciloscopioModuladora\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OsciloscopioModuladora","params","_s","containerRef","chartRef","dataSeriesRef","xAxisRef","intervalRef","isReady","setIsReady","timeOffsetRef","defaultParams","voltaje","frecuencia","fase","actualParams","undefined","checkReadiness","document","getElementById","window","SciChart","setTimeout","current","delete","clearInterval","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","NumberRange","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","visibleRange","autoRange","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","strokeThickness","renderableSeries","console","log","startRealTimeAnimation","error","clear","generateStaticData","setInterval","currentTime","generateWaveformData","startTime","endTime","minPointsPerCycle","cyclesInWindow","totalPoints","Math","max","ceil","timeStep","i","time","angularFreq","PI","y","sin","append","id","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioModuladora.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst OsciloscopioModuladora = ({ params }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const timeOffsetRef = useRef(0);\n  \n  const defaultParams = {\n    voltaje: 3,\n    frecuencia: 30,\n    fase: 0\n  };\n\n  const actualParams = {\n    voltaje: params?.voltaje !== undefined ? params.voltaje : defaultParams.voltaje,\n    frecuencia: params?.frecuencia !== undefined ? params.frecuencia : defaultParams.frecuencia,\n    fase: params?.fase !== undefined ? params.fase : defaultParams.fase\n  };\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-moduladora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const { SciChartSurface, NumericAxis, FastLineRenderableSeries, XyDataSeries, NumberRange } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"osciloscopio-moduladora\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(0, 0.1),\n          autoRange: false\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          autoRange: false\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const signalData = new XyDataSeries(wasmContext);\n\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#2196F3\",\n          dataSeries: signalData,\n          strokeThickness: 1.5,\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n\n        console.log(\"SciChart Moduladora inicializado correctamente\");\n\n        startRealTimeAnimation();\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Moduladora:\", error);\n      }\n    };\n\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  useEffect(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    if (isReady && dataSeriesRef.current) {\n      startRealTimeAnimation();\n    }\n  }, [actualParams.voltaje, actualParams.frecuencia, actualParams.fase, isReady]);\n\n  const startRealTimeAnimation = () => {\n    if (!dataSeriesRef.current || !xAxisRef.current) return;\n\n    dataSeriesRef.current.clear();\n    timeOffsetRef.current = 0;\n\n    generateStaticData();\n\n    intervalRef.current = setInterval(() => {\n      timeOffsetRef.current += 0.001;\n      const currentTime = timeOffsetRef.current;\n\n      xAxisRef.current.visibleRange = new window.SciChart.NumberRange(\n        currentTime,\n        currentTime + 0.1\n      );\n\n      generateWaveformData(currentTime, currentTime + 0.1);\n    }, 50);\n  };\n\n  const generateWaveformData = (startTime, endTime) => {\n    if (!dataSeriesRef.current) return;\n\n    dataSeriesRef.current.clear();\n\n    const minPointsPerCycle = 20;\n    const cyclesInWindow = actualParams.frecuencia * (endTime - startTime);\n    const totalPoints = Math.max(1000, Math.ceil(minPointsPerCycle * cyclesInWindow));\n\n    const timeStep = (endTime - startTime) / totalPoints;\n\n    for (let i = 0; i <= totalPoints; i++) {\n      const time = startTime + (i * timeStep);\n      const angularFreq = 2 * Math.PI * actualParams.frecuencia;\n      const y = actualParams.voltaje * Math.sin(angularFreq * time + actualParams.fase);\n      dataSeriesRef.current.append(time, y);\n    }\n  };\n  \n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n    const currentTime = timeOffsetRef.current;\n    generateWaveformData(currentTime, currentTime + 0.1);\n  };\n\n  return (\n    <div id=\"osciloscopio-moduladora\" ref={containerRef} style={{ width: '100%', height: '350px', backgroundColor: '#121212' }}></div>\n  );\n};\n\nexport default OsciloscopioModuladora;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}