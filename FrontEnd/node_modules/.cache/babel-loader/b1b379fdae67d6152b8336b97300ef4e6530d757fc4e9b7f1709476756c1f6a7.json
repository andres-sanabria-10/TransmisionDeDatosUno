{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andres Sanabria\\\\Desktop\\\\10 semestre\\\\Transmision de datos\\\\proyectoV2\\\\TransmisionDeDatos\\\\FrontEnd\\\\src\\\\components\\\\OsciloscopioPortadora.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OsciloscopioPortadora = ({\n  params\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n    const numPoints = 1000; // Cantidad de puntos fijos\n    const duration = 1; // Duración en segundos\n    const maxPoints = 2000; // Límite máximo de puntos antes de eliminar los más viejos\n\n    for (let i = 0; i < numPoints; i++) {\n      const time = i / numPoints * duration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n      dataSeriesRef.current.append(time, y);\n\n      // Si la cantidad de puntos supera el límite, elimina los más viejos\n      if (dataSeriesRef.current.count() > maxPoints) {\n        dataSeriesRef.current.removeRange(0, dataSeriesRef.current.count() - maxPoints);\n      }\n    }\n\n    // Ajustar el eje X para que siempre muestre los últimos valores agregados\n    const lastTime = dataSeriesRef.current.getNativeXValues().pop();\n    xAxisRef.current.visibleRange = new window.SciChart.NumberRange(Math.max(0, lastTime - duration), lastTime);\n  };\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n    checkReadiness();\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isReady) return;\n    let isComponentMounted = true;\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n        const {\n          sciChartSurface,\n          wasmContext\n        } = await SciChartSurface.create(\"osciloscopio-portadora\");\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n        sciChartSurface.background = \"#121212\";\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          },\n          visibleRange: new NumberRange(0, 1)\n        });\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: {\n            color: \"#e0e0e0\"\n          },\n          titleStyle: {\n            color: \"#e0e0e0\"\n          },\n          majorGridLineStyle: {\n            color: \"#333\",\n            strokeThickness: 1\n          },\n          tickLabelStyle: {\n            color: \"#e0e0e0\"\n          }\n        });\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n        const signalData = new XyDataSeries(wasmContext);\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 1\n        });\n        sciChartSurface.renderableSeries.add(lineSeries);\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n        console.log(\"SciChart Portadora inicializado correctamente\");\n        if ((params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n          generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n    initSciChart();\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n  useEffect(() => {\n    if (dataSeriesRef.current && (params === null || params === void 0 ? void 0 : params.voltaje) !== undefined && (params === null || params === void 0 ? void 0 : params.frecuencia) !== undefined && (params === null || params === void 0 ? void 0 : params.fase) !== undefined) {\n      generateStaticData();\n    }\n  }, [params === null || params === void 0 ? void 0 : params.voltaje, params === null || params === void 0 ? void 0 : params.frecuencia, params === null || params === void 0 ? void 0 : params.fase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"osciloscopio-portadora\",\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '350px',\n      backgroundColor: '#121212'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(OsciloscopioPortadora, \"Q8d33s5IHPgL6UMTos33FaDhqig=\");\n_c = OsciloscopioPortadora;\nexport default OsciloscopioPortadora;\nvar _c;\n$RefreshReg$(_c, \"OsciloscopioPortadora\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","OsciloscopioPortadora","params","_s","containerRef","chartRef","dataSeriesRef","xAxisRef","intervalRef","isReady","setIsReady","generateStaticData","current","numPoints","duration","maxPoints","i","time","angularFreq","Math","PI","frecuencia","y","voltaje","sin","fase","append","count","removeRange","lastTime","getNativeXValues","pop","visibleRange","window","SciChart","NumberRange","max","checkReadiness","document","getElementById","setTimeout","delete","clearInterval","isComponentMounted","initSciChart","SciChartSurface","NumericAxis","FastLineRenderableSeries","XyDataSeries","sciChartSurface","wasmContext","create","background","xAxis","axisTitle","labelStyle","color","titleStyle","majorGridLineStyle","strokeThickness","tickLabelStyle","yAxis","xAxes","add","yAxes","signalData","lineSeries","stroke","dataSeries","renderableSeries","console","log","undefined","error","id","ref","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Andres Sanabria/Desktop/10 semestre/Transmision de datos/proyectoV2/TransmisionDeDatos/FrontEnd/src/components/OsciloscopioPortadora.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst OsciloscopioPortadora = ({ params }) => {\n  const containerRef = useRef(null);\n  const chartRef = useRef(null);\n  const dataSeriesRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n\n  const generateStaticData = () => {\n    if (!dataSeriesRef.current) return;\n\n    const numPoints = 1000; // Cantidad de puntos fijos\n    const duration = 1; // Duración en segundos\n    const maxPoints = 2000; // Límite máximo de puntos antes de eliminar los más viejos\n\n    for (let i = 0; i < numPoints; i++) {\n      const time = (i / numPoints) * duration;\n      const angularFreq = 2 * Math.PI * params.frecuencia;\n      const y = params.voltaje * Math.sin(angularFreq * time + params.fase);\n\n      dataSeriesRef.current.append(time, y);\n\n      // Si la cantidad de puntos supera el límite, elimina los más viejos\n      if (dataSeriesRef.current.count() > maxPoints) {\n        dataSeriesRef.current.removeRange(0, dataSeriesRef.current.count() - maxPoints);\n      }\n    }\n\n    // Ajustar el eje X para que siempre muestre los últimos valores agregados\n    const lastTime = dataSeriesRef.current.getNativeXValues().pop();\n    xAxisRef.current.visibleRange = new window.SciChart.NumberRange(\n      Math.max(0, lastTime - duration),\n      lastTime\n    );\n  };\n\n  useEffect(() => {\n    const checkReadiness = () => {\n      if (document.getElementById(\"osciloscopio-portadora\") && window.SciChart) {\n        setIsReady(true);\n      } else {\n        setTimeout(checkReadiness, 100);\n      }\n    };\n\n    checkReadiness();\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.delete();\n        chartRef.current = null;\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    let isComponentMounted = true;\n\n    const initSciChart = async () => {\n      try {\n        const {\n          SciChartSurface,\n          NumericAxis,\n          FastLineRenderableSeries,\n          XyDataSeries,\n          NumberRange\n        } = window.SciChart;\n\n        const { sciChartSurface, wasmContext } = await SciChartSurface.create(\"osciloscopio-portadora\");\n\n        if (!isComponentMounted) {\n          sciChartSurface.delete();\n          return;\n        }\n\n        sciChartSurface.background = \"#121212\";\n\n        const xAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Tiempo (s)\",\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" },\n          visibleRange: new NumberRange(0, 1)\n        });\n\n        const yAxis = new NumericAxis(wasmContext, {\n          axisTitle: \"Voltaje (V)\",\n          visibleRange: new NumberRange(-6, 6),\n          labelStyle: { color: \"#e0e0e0\" },\n          titleStyle: { color: \"#e0e0e0\" },\n          majorGridLineStyle: { color: \"#333\", strokeThickness: 1 },\n          tickLabelStyle: { color: \"#e0e0e0\" }\n        });\n\n        sciChartSurface.xAxes.add(xAxis);\n        sciChartSurface.yAxes.add(yAxis);\n\n        const signalData = new XyDataSeries(wasmContext);\n\n        const lineSeries = new FastLineRenderableSeries(wasmContext, {\n          stroke: \"#FF5722\",\n          dataSeries: signalData,\n          strokeThickness: 1\n        });\n\n        sciChartSurface.renderableSeries.add(lineSeries);\n\n        chartRef.current = sciChartSurface;\n        dataSeriesRef.current = signalData;\n        xAxisRef.current = xAxis;\n\n        console.log(\"SciChart Portadora inicializado correctamente\");\n\n        if (params?.voltaje !== undefined &&\n          params?.frecuencia !== undefined &&\n          params?.fase !== undefined) {\n            generateStaticData();\n        }\n      } catch (error) {\n        console.error(\"Error inicializando SciChart Portadora:\", error);\n      }\n    };\n\n    initSciChart();\n\n    return () => {\n      isComponentMounted = false;\n    };\n  }, [isReady]);\n\n  useEffect(() => {\n    if (dataSeriesRef.current &&\n      params?.voltaje !== undefined &&\n      params?.frecuencia !== undefined &&\n      params?.fase !== undefined) {\n        generateStaticData();\n    }\n  }, [params?.voltaje, params?.frecuencia, params?.fase]);\n\n  return (\n    <div id=\"osciloscopio-portadora\" ref={containerRef} style={{ width: '100%', height: '350px', backgroundColor: '#121212' }}></div>\n  );\n};\n\nexport default OsciloscopioPortadora;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMQ,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMS,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMU,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACL,aAAa,CAACM,OAAO,EAAE;IAE5B,MAAMC,SAAS,GAAG,IAAI,CAAC,CAAC;IACxB,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMC,SAAS,GAAG,IAAI,CAAC,CAAC;;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,EAAEG,CAAC,EAAE,EAAE;MAClC,MAAMC,IAAI,GAAID,CAAC,GAAGH,SAAS,GAAIC,QAAQ;MACvC,MAAMI,WAAW,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGlB,MAAM,CAACmB,UAAU;MACnD,MAAMC,CAAC,GAAGpB,MAAM,CAACqB,OAAO,GAAGJ,IAAI,CAACK,GAAG,CAACN,WAAW,GAAGD,IAAI,GAAGf,MAAM,CAACuB,IAAI,CAAC;MAErEnB,aAAa,CAACM,OAAO,CAACc,MAAM,CAACT,IAAI,EAAEK,CAAC,CAAC;;MAErC;MACA,IAAIhB,aAAa,CAACM,OAAO,CAACe,KAAK,CAAC,CAAC,GAAGZ,SAAS,EAAE;QAC7CT,aAAa,CAACM,OAAO,CAACgB,WAAW,CAAC,CAAC,EAAEtB,aAAa,CAACM,OAAO,CAACe,KAAK,CAAC,CAAC,GAAGZ,SAAS,CAAC;MACjF;IACF;;IAEA;IACA,MAAMc,QAAQ,GAAGvB,aAAa,CAACM,OAAO,CAACkB,gBAAgB,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;IAC/DxB,QAAQ,CAACK,OAAO,CAACoB,YAAY,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACC,WAAW,CAC7DhB,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEP,QAAQ,GAAGf,QAAQ,CAAC,EAChCe,QACF,CAAC;EACH,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAMyC,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAIC,QAAQ,CAACC,cAAc,CAAC,wBAAwB,CAAC,IAAIN,MAAM,CAACC,QAAQ,EAAE;QACxExB,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACL8B,UAAU,CAACH,cAAc,EAAE,GAAG,CAAC;MACjC;IACF,CAAC;IAEDA,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACX,IAAIhC,QAAQ,CAACO,OAAO,EAAE;QACpBP,QAAQ,CAACO,OAAO,CAAC6B,MAAM,CAAC,CAAC;QACzBpC,QAAQ,CAACO,OAAO,GAAG,IAAI;MACzB;MACA,IAAIJ,WAAW,CAACI,OAAO,EAAE;QACvB8B,aAAa,CAAClC,WAAW,CAACI,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,OAAO,EAAE;IAEd,IAAIkC,kBAAkB,GAAG,IAAI;IAE7B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAM;UACJC,eAAe;UACfC,WAAW;UACXC,wBAAwB;UACxBC,YAAY;UACZb;QACF,CAAC,GAAGF,MAAM,CAACC,QAAQ;QAEnB,MAAM;UAAEe,eAAe;UAAEC;QAAY,CAAC,GAAG,MAAML,eAAe,CAACM,MAAM,CAAC,wBAAwB,CAAC;QAE/F,IAAI,CAACR,kBAAkB,EAAE;UACvBM,eAAe,CAACR,MAAM,CAAC,CAAC;UACxB;QACF;QAEAQ,eAAe,CAACG,UAAU,GAAG,SAAS;QAEtC,MAAMC,KAAK,GAAG,IAAIP,WAAW,CAACI,WAAW,EAAE;UACzCI,SAAS,EAAE,YAAY;UACvBC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAC;UAChCC,UAAU,EAAE;YAAED,KAAK,EAAE;UAAU,CAAC;UAChCE,kBAAkB,EAAE;YAAEF,KAAK,EAAE,MAAM;YAAEG,eAAe,EAAE;UAAE,CAAC;UACzDC,cAAc,EAAE;YAAEJ,KAAK,EAAE;UAAU,CAAC;UACpCxB,YAAY,EAAE,IAAIG,WAAW,CAAC,CAAC,EAAE,CAAC;QACpC,CAAC,CAAC;QAEF,MAAM0B,KAAK,GAAG,IAAIf,WAAW,CAACI,WAAW,EAAE;UACzCI,SAAS,EAAE,aAAa;UACxBtB,YAAY,EAAE,IAAIG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;UACpCoB,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAC;UAChCC,UAAU,EAAE;YAAED,KAAK,EAAE;UAAU,CAAC;UAChCE,kBAAkB,EAAE;YAAEF,KAAK,EAAE,MAAM;YAAEG,eAAe,EAAE;UAAE,CAAC;UACzDC,cAAc,EAAE;YAAEJ,KAAK,EAAE;UAAU;QACrC,CAAC,CAAC;QAEFP,eAAe,CAACa,KAAK,CAACC,GAAG,CAACV,KAAK,CAAC;QAChCJ,eAAe,CAACe,KAAK,CAACD,GAAG,CAACF,KAAK,CAAC;QAEhC,MAAMI,UAAU,GAAG,IAAIjB,YAAY,CAACE,WAAW,CAAC;QAEhD,MAAMgB,UAAU,GAAG,IAAInB,wBAAwB,CAACG,WAAW,EAAE;UAC3DiB,MAAM,EAAE,SAAS;UACjBC,UAAU,EAAEH,UAAU;UACtBN,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFV,eAAe,CAACoB,gBAAgB,CAACN,GAAG,CAACG,UAAU,CAAC;QAEhD7D,QAAQ,CAACO,OAAO,GAAGqC,eAAe;QAClC3C,aAAa,CAACM,OAAO,GAAGqD,UAAU;QAClC1D,QAAQ,CAACK,OAAO,GAAGyC,KAAK;QAExBiB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;QAE5D,IAAI,CAAArE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEqB,OAAO,MAAKiD,SAAS,IAC/B,CAAAtE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,UAAU,MAAKmD,SAAS,IAChC,CAAAtE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuB,IAAI,MAAK+C,SAAS,EAAE;UAC1B7D,kBAAkB,CAAC,CAAC;QACxB;MACF,CAAC,CAAC,OAAO8D,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IAED7B,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACXD,kBAAkB,GAAG,KAAK;IAC5B,CAAC;EACH,CAAC,EAAE,CAAClC,OAAO,CAAC,CAAC;EAEbb,SAAS,CAAC,MAAM;IACd,IAAIU,aAAa,CAACM,OAAO,IACvB,CAAAV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEqB,OAAO,MAAKiD,SAAS,IAC7B,CAAAtE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,UAAU,MAAKmD,SAAS,IAChC,CAAAtE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuB,IAAI,MAAK+C,SAAS,EAAE;MAC1B7D,kBAAkB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEqB,OAAO,EAAErB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,UAAU,EAAEnB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuB,IAAI,CAAC,CAAC;EAEvD,oBACEzB,OAAA;IAAK0E,EAAE,EAAC,wBAAwB;IAACC,GAAG,EAAEvE,YAAa;IAACwE,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,eAAe,EAAE;IAAU;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAErI,CAAC;AAAChF,EAAA,CApJIF,qBAAqB;AAAAmF,EAAA,GAArBnF,qBAAqB;AAsJ3B,eAAeA,qBAAqB;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}